Resources:
  CreateThumbnailsBucket: # Create a bucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:provider.environment.BUCKET_THUMBNAILS}
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - PUT
              - GET
              - POST
              - HEAD
            AllowedOrigins:
              - "*"
            AllowedHeaders:
              - "*"
      AccessControl: PublicRead

  CreateThumbnailsSubscription: # Subscribe lambda to topic
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint:
        Fn::GetAtt: [ CreateThumbnailsLambdaFunction , "Arn" ]
      Protocol: lambda
      TopicArn: ${self:provider.environment.SNS_TOPIC_MEDIA_SOURCE_ARN}

  CreateThumbnailsLambdaFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: ${self:provider.environment.SNS_TOPIC_MEDIA_SOURCE_ARN}
      FunctionName:
        Fn::GetAtt: [ CreateThumbnailsLambdaFunction, "Arn" ]

  CreateThumbnailsBucketPolicy: # give public permission to access bucket contents
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action:
              - 's3:GetObject'
            Resource:
              - { "Fn::Join": [ "/", [ { "Fn::GetAtt": [ "CreateThumbnailsBucket", "Arn" ] }, "*" ]] }
      Bucket:
        Ref: "CreateThumbnailsBucket"