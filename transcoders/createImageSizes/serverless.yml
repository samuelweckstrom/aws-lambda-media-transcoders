service: ${file(../project.env.yml):PROJECT_NAME}-createImageSizes

provider:
  name: aws
  stage: dev
  region: ${file(../project.env.yml):REGION}
  runtime: nodejs8.10
  versionFunctions: false
  timeout: 10
  memorySize: 512
  # Use the below setting to deploy to a custom bucket. Will require the bucket to be created manually though.
  # deploymentBucket: ${self:provider.stage}-${file(../project.env.yml):PROJECT_NAME}-transcoder-deployment
  package:
    excludeDevDependencies: true
    exclude:
      - .git/**
      - .vscode/**
      - .test/**
  environment:
    REGION: ${self:provider.region}
    BUCKET_IMAGE_SIZES: 
      Fn::Join:
        - "-"
        - - ${self:provider.stage}
          - ${file(../project.env.yml):BUCKET_IMAGE_SIZES}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource:
        - { "Fn::Join": [ "/", [ { "Fn::GetAtt": [ "CreateImageSizesBucket", "Arn" ] }, "*" ]] }

functions:
  createImageSizes:
    handler: createImageSizes.handler
    layers:
      - Fn::ImportValue: GraphicsmagickLambdaLayer
    events:
      - http:
          path: /
          method: put
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent

resources:
  - ${file(./resources.yml)}